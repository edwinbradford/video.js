// Container for all the buttons except the big play button
// Covers the video
.video-js .vjs-control-bar {
  position: absolute;
  top: $controls-margin;
  right: $controls-margin;
  bottom: $controls-margin;
  left: $controls-margin;
  width: auto;
  // background-color: rgba(255,255,0,0.5); // yellow debug background
  pointer-events: none; // Stop overlay from preventing buttons below from working
  @include display-flex( flex-start, flex-end);

  // will target parent vjs-button divs but not child vjs-button buttons
  .vjs-control.vjs-button {
    width: $control-button-width; // don't allow buttons to scale down on tiny screens
    min-width: $control-button-width; // don't allow buttons to scale down on tiny screens
    height: $control-button-height;
    margin-left: $control-button-spacing;
    &:first-child {
      margin-left: 0;
    }
  }
}

// Video has started playing
.vjs-has-started .vjs-control-bar {
  opacity: 1;
  $trans: opacity 500ms;
  @include transition($trans);
}

// Video has started playing AND user is inactive
.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  // Remain visible for screen reader and keyboard users
  visibility: visible;
  opacity: 0;
  $trans: opacity 500ms;
  @include transition($trans);

}

.vjs-controls-disabled .vjs-control-bar,
.vjs-using-native-controls .vjs-control-bar,
.vjs-error .vjs-control-bar {
  // !important is ok in this context.
  display: none !important;
}

// Don't hide the control bar if it's audio
.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {
  opacity: 1;
}

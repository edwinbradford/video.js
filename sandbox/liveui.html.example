<!DOCTYPE html>
<html lang="en-GB">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Video.js Sandbox</title>

  <!-- Viewport style -->
  <style>
    html {
      width: 100%;
      height: 100%;
      font-family: consolas;
      font-size: 100%;
      background-color: #1a1a1a;
    }
    body {
      margin: 0;
      height: 100%;
    }
    video {
      margin: 0;
    }
  </style>

  <link href="../dist/video-js.css" rel="stylesheet" type="text/css">
  <script src="../dist/video.js"></script>

</head>
<body>
  <video-js
    id="videojsElement"
    controls
    preload="auto"
    width="640"
    height="264"
  >
    <source
      src="https://skynewsau-live.akamaized.net/hls/live/2002689/skynewsau-extra1/master.m3u8"
      type="application/x-mpegURL"
    >
    <p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
  </video-js>
  <script>

    /* Add a custom component to wrap control bar child flex items,
     * cf. player control bar children below
     */
     const Component = videojs.getComponent('Component');
    class neueWrap extends Component {
      constructor(player, options) {
        super(player, options);
        this.addClass('vjs-neue-wrap'); // Add any classes you want
      }
    }
    videojs.registerComponent('neueWrap', neueWrap);

    /* Pad time with leading zeros,
     * cf. player ready function below
     */
    function formatTimeWithLeadingZeros(seconds) {
      const minutes = Math.floor(seconds / 60);
      const remainingSeconds = Math.floor(seconds % 60);
      return `${minutes < 10 ? '0' : ''}${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }

    // fake a livestream for easy testing
    var liveui = true

    if (videojs.browser.IS_ANDROID) {
      liveui = false;
    }
    var player = videojs('videojsElement', {
      liveui: liveui,
      autoplay: false,
      experimentalSvgIcons: true,
      controls: true,
      loop: false,
      muted: false,
      preload: 'auto',
      responsive: true,
      fluid: true,            // (1) or...
      // fill: true,          // (2) or...
      // aspectRatio: '16:9', // (3)
      // audioOnlyMode: true,
      spatialNavigation: {
        enabled: true,
        horizontalSeek: true
      },
      breakpoints: {
        tiny: 300,
        xsmall: 400,
        small: 500,
        medium: 600,
        large: 700,
        xlarge: 800,
        huge: 900
      },
      html5: {
        nativeTextTracks: false,
        nativeControlsForTouch: false,
        nativeAudioTracks: false,
        nativeVideoTracks: false,
      },
      inactivityTimeout: 1000,
      controlBar: {
        // children in flex order
        children: [
          'playToggle',
          {
            name: 'volumePanel',
            inline: true // Horizontal
          },
          'customControlSpacer',
          'playbackRateMenuButton',
          'chaptersButton',
          'descriptionsButton',
          'subtitlesButton',
          'captionsButton',
          'subsCapsButton',
          'audioTrackButton',
          'pictureInPictureToggle',
          'fullscreenToggle',
          'neueWrap', // Custom flexwrap component
          'currentTimeDisplay',
          'timeDivider',
          'durationDisplay',
          'progressControl',
          'liveDisplay',
          'seekToLive',
          {
            name: 'remainingTimeDisplay',
            displayNegative: false 
          },
        ],
      },
    });
    /* Show big play button when paused and time controls,
     * cf. https://github.com/videojs/video.js/pull/8833
     */
     player.addClass(
      'vjs-normalise-time-controls',
      'vjs-show-big-play-button-on-pause'
    );
    player.ready(function() {
      // Remove browser tooltips 
      player.el().querySelectorAll('[title]').forEach(element => {
        element.setAttribute('title', '');
      });
    });
  </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Video.js Plugin Example</title>

    <style>
      html {
        width: 100%;
        height: 100%;
        font-family: consolas;
        font-size: 100%;
        background-color:#e5e5e5;
      }
      body {
        margin: 0;
        height: 100%;
      }
      video {
        margin: 0;
      }
      div.instructions {
        color: #999;
        padding: 10px;
        margin-bottom: 20px;
        font-size: 1.2rem;
        line-height: 1.5;
      }
      pre {
        font-family: inherit;
      }
    </style>

    <!-- AV Neue theme -->
    <link href="../dist/video-js.css" rel="stylesheet" type="text/css">

    <!-- Video.js -->
    <script src="../dist/video.js"></script>

</head>
<body>

  <video id="vid1" class="video-js vjs-big-play-centered" poster="poster.jpg">
    <source src="https://archive.org/download/ElephantsDream/ed_hd.mp4" type="video/mp4">
    <source src="https://archive.org/download/ElephantsDream/ed_hd.ogv" type="video/ogv">
    <p>Video Playback Not Supported</p>
  </video>

  <div class="instructions">
    <p>This page shows you how to create, register and initialize a Video.js plugin.</p>
    <p>Open the console to view the buffered percentage.</p>
  </div>

  <script>
    /*
     * Unfinished AV Neue Playback Rate Plugin.
     * Work in progress.
     *
     */
    const PRMB = videojs.getComponent('PlaybackRateMenuButton');

    class MyPRMB extends PRMB {

      // Override the default handleClick with this one
      handleClick() {
        videojs.log('Playback Rate Menu Button Clicked');
      }
    }

    videojs.registerComponent('MyPRMB', MyPRMB);

    var player = videojs('vid1', {

      // Player setup
      'controls': true,
      'controlBar': {
        'MyPRMB':true, // Add Custom Component
        'playbackRateMenuButton': false, // Remove default Component
      },
      'playbackRates': [0.5, 1, 1.5, 2], // Enable playback rates
    },
    function() {
      // this.createModal('foo');
      // Callback
    });
  </script>

  <script>
    /*
     * Example plugin from guide.
     */
    const Plugin = videojs.getPlugin('plugin');

    class ExamplePlugin extends Plugin {

      constructor(player, options) {
        super(player, options);

        // Add customClass to the videojs classes
        if (options.customClass) {
          player.addClass(options.customClass);
        }
        videojs.log('Plugin loaded!');
      }
    }

    videojs.registerPlugin('examplePlugin', ExamplePlugin);

    var player = videojs('vid1');

    // The class "example-class" will be added to the videojs container div
    player.examplePlugin({customClass: 'example-class'});

  </script>

  <script>
    (function() {
      var vid1, progressed;

      // create a really simple plugin
      // this one just logs the buffered percentage to the console whenever
      // more data is downloaded
      progressed = function(options) {
        this.on('progress', function(e) {
          console.log(this.bufferedPercent());
        });
      };

      // register the plugin
      videojs.registerPlugin('progressed', progressed);

      // initialize it
      vid1 = videojs('vid1');

      // Uncomment next line to enable plugin
      // vid1.progressed();
    })();

  </script>

</body>
</html>
